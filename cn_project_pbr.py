# -*- coding: utf-8 -*-
"""cn project PBR.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Bt2wHBJA5vQv1nJWYB1J_tmsFbVD7Fut
"""

import os
import subprocess

# Network configuration
NETWORK_CONFIG = {
    "lan_interface": "eth0",
    "vpn_interface": "tun0",
    "lan_subnet": "192.168.1.0/24",
    "vpn_subnet": "10.8.0.0/24",
    "target_gateway": "192.168.1.1",  # Gateway for LAN traffic
    "vpn_gateway": "10.8.0.1"  # Gateway for VPN traffic
}

def enable_ip_forwarding() -> None:
    """Enable IP forwarding"""
    try:
        subprocess.run(["echo", "1", ">", "/proc/sys/net/ipv4/ip_forward"], check=True)
    except subprocess.CalledProcessError as e:
        print(f"Error enabling IP forwarding: {e}")

def add_routing_rules() -> None:
    """Add routing rules for PBR"""
    lan_interface = NETWORK_CONFIG["lan_interface"]
    vpn_interface = NETWORK_CONFIG["vpn_interface"]
    lan_subnet = NETWORK_CONFIG["lan_subnet"]
    vpn_subnet = NETWORK_CONFIG["vpn_subnet"]
    target_gateway = NETWORK_CONFIG["target_gateway"]
    vpn_gateway = NETWORK_CONFIG["vpn_gateway"]

    try:
        subprocess.run(["ip", "rule", "add", f"from {lan_subnet}", "table", "100"], check=True)
        subprocess.run(["ip", "rule", "add", f"from {vpn_subnet}", "table", "200"], check=True)
        subprocess.run(["ip", "route", "add", "default", f"via {target_gateway}", "table", "100"], check=True)
        subprocess.run(["ip", "route", "add", "default", f"via {vpn_gateway}", "table", "200"], check=True)
    except subprocess.CalledProcessError as e:
        print(f"Error adding routing rules: {e}")


# Configure iptables rules for Policy-Based Routing
def configure_iptables() -> None:
    """Configure iptables rules for Policy-Based Routing"""
    lan_interface = NETWORK_CONFIG["lan_interface"]
    vpn_interface = NETWORK_CONFIG["vpn_interface"]

    try:
        subprocess.run(["iptables", "-t", "nat", "-A", "POSTROUTING", "-o", lan_interface, "-j", "MASQUERADE"], check=True)
        subprocess.run(["iptables", "-t", "nat", "-A", "POSTROUTING", "-o", vpn_interface, "-j", "MASQUERADE"], check=True)
    except subprocess.CalledProcessError as e:
        print(f"Error configuring iptables: {e}")

def main() -> None:
    """Main function"""
    enable_ip_forwarding()
    add_routing_rules()
    configure_iptables()
    print("Policy-Based Routing (PBR) configuration completed.")

if __name__ == "__main__":
    main()